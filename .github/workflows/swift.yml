name: iOS Build and Deploy with Supabase

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test iOS App
    runs-on: macos-latest

    steps:
      # Paso 1: Clonar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v4

      # Paso 2: Configurar Xcode
      - name: Set up Xcode
        run: |
          gem install xcode-install
          xcversion install "16.2"  # O la versión de Xcode que necesitas
          sudo xcode-select -s /Applications/Xcode_16.2.app/Contents/Developer

      # Paso 3: Instalar dependencias de CocoaPods (si las usas)
      - name: Install CocoaPods dependencies
        run: |
          sudo gem install cocoapods
          pod install

      # Paso 4: Construir la aplicación
      - name: Build the app
        run: |
          xcodebuild clean build -scheme "YourAppScheme" -workspace "YourApp.xcworkspace" -sdk iphonesimulator

      # Paso 5: Ejecutar las pruebas unitarias
      - name: Run tests
        run: |
          xcodebuild test -scheme "YourAppScheme" -workspace "YourApp.xcworkspace" -destination "platform=iOS Simulator,name=iPhone 14"

  deploy:
    name: Deploy to Supabase
    runs-on: macos-latest
    needs: build

    steps:
      # Paso 6: Clonar el repositorio nuevamente para acceder al código de configuración
      - name: Checkout repository
        uses: actions/checkout@v4

      # Paso 7: Autenticación en Supabase
      - name: Authenticate with Supabase
        run: |
          echo "Supabase API Key: ${{ secrets.SUPABASE_API_KEY }}"
          echo "Supabase URL: ${{ secrets.SUPABASE_URL }}"

      # Paso 8: Desplegar (Esto puede ser el código relacionado a cualquier acción de despliegue)
      - name: Deploy to Supabase (Ejemplo)
        run: |
          curl -X POST ${{ secrets.SUPABASE_URL }}/api/v1/deploy \
            -H "Authorization: Bearer ${{ secrets.SUPABASE_API_KEY }}" \
            -d "deployment_content=$(cat YourDeploymentScript)"
